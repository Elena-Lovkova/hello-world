{
  "Name": "Upload",
  "Description": "",
  "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED,EXECUTION_STATE_TIMEDOUT\nfrom SiemplifyUtils import dict_to_flat, add_prefix_to_dict, flat_dict_to_csv, convert_dict_to_json_result_dict\nfrom time import strftime\nfrom SiemplifyDataModel import EntityTypes\nfrom sb_manager import SandBlast_Manager\nimport requests\nimport json \n\ndef dict2str(d):\n    if type(d) != dict: return d \n    d_vals = []\n    msg = \"\"\n    \n    for key, val in d.items(): \n        if type(val) == dict: continue \n        d_vals.append(\"{}: {}\".format(key.replace('_', ' ').capitalize(), str(val)))\n        \n    return msg + \"\\n\".join(d_vals)\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    configurations = siemplify.get_configuration('Check Point SandBlast')\n    \n    api_url = configurations['api_url']\n    api_key = configurations['api_key']\n    siemplify.script_name = \"sb_upload\"\n    end_state = 'false'\n    output_message = \"\"\n    successful_entities = []\n    script_directory = siemplify.run_folder\n    \n    file_path = None\n    file_hash = None\n    \n    sbmanager = SandBlast_Manager(api_key=api_key, url=api_url)\n    \n    siemplify.LOGGER.info(\"----------------- Main - Started -----------------\")\n    \n    for entity in siemplify.target_entities: \n        siemplify.LOGGER.info(entity.identifier)\n        if entity.entity_type == EntityTypes.FILENAME: \n            if not file_path:\n                file_path = script_directory + \"/\" + entity.identifier\n        elif entity.entity_type == EntityTypes.FILEHASH: \n            if not file_hash: \n                file_hash = entity.identifier\n            if not file_path: \n                continue \n        else: \n            continue\n        \n        siemplify.LOGGER.info(entity.identifier)\n        # Upload to sandblast API \n        try:\n            res = sbmanager.upload(file_path=file_path, file_hash=file_hash)\n        except Exception as e: \n            # Handle exception - to do \n            res = \"\"\n        if type(res) == str: \n            output_message = \"Uploaded file {} to sandblast for analysis\".format(file_path)\n        else: \n            output_message = \"Uploaded file {} to sandblast for analysis\".format(file_path)\n\n        successful_entities.append(entity.identifier)\n        \n    successful_entities = \",\".join(successful_entities)\n    end_state = \"true\"\n    siemplify.LOGGER.info(\"----------------- Main - Finished -----------------\")\n    siemplify.end(output_message + \" Successful Entities: {}\".format(successful_entities), end_state)\n\n\nif __name__ == \"__main__\":\n    main()",
  "IntegrationIdentifier": "Check Point Sandblast",
  "ScriptResultName": "ScriptResult",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "{}",
      "ShowResult": true
    }
  ],
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": true,
  "IsSystem": false,
  "Version": 4.0,
  "TimeoutSeconds": 300,
  "Parameters": [],
  "DefaultResultValue": "",
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1598191590169,
  "ModificationTimeUnixTimeInMs": 1598788561465
}