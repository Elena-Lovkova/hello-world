{
  "Name": "Upload Base64",
  "Description": "",
  "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED,EXECUTION_STATE_TIMEDOUT\nfrom SiemplifyUtils import dict_to_flat, add_prefix_to_dict, flat_dict_to_csv, convert_dict_to_json_result_dict\nfrom time import strftime\nfrom SiemplifyDataModel import EntityTypes\nfrom sb_manager import SandBlast_Manager\nimport requests\nimport json, base64, os\n\ndef dict2str(d):\n    if type(d) != dict: return d \n    d_vals = []\n    msg = \"\"\n    \n    for key, val in d.items(): \n        if type(val) == dict: continue \n        d_vals.append(\"{}: {}\".format(key.replace('_', ' ').capitalize(), str(val)))\n        \n    return msg + \"\\n\".join(d_vals)\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    configurations = siemplify.get_configuration('Check Point SandBlast')\n    \n    api_url = configurations['api_url']\n    api_key = configurations['api_key']\n    siemplify.script_name = \"sb_upload_base64\"\n    result_value = 'false'\n    output_message = \"\"\n    json_result = {}\n    error_requests = []\n    \n    base64_blobs = siemplify.parameters.get(\"Base64 File Blob\")\n    max_uploads = int(siemplify.parameters.get(\"Max Uploads\", \"5\"))\n    \n    sbmanager = SandBlast_Manager(api_key=api_key, url=api_url)\n    \n    siemplify.LOGGER.info(\"----------------- Main - Started -----------------\")\n    for i, base64_blob in enumerate(base64_blobs.split(\",\")):\n        if i > max_uploads:\n            output_message = \"Reached maximum uploads.\"\n            break\n        base64_blob = base64_blob.strip()\n        \n        try:\n            # file_path = os.path.join(siemplify.run_folder, \"temp.txt\")\n            # with open(file_path, 'wb') as f:\n            #     f.write(base64.b64decode(base64_blob))\n            # res = sbmanager.upload_old(file_path=file_path)\n            res = sbmanager.upload(file_base64=base64_blob, file_name=\"untitled.doc\")\n        except Exception as e:\n            raise\n            error_requests.append(str(e))\n            continue\n        \n        json_result[res.get(\"file_hash\")] = res.get(\"result\")\n\n    if json_result:\n        siemplify.result.add_result_json(convert_dict_to_json_result_dict(json_result))\n    if error_requests:\n        output_message += \"\\n\" + \"Errors:\\n{}\".format(\"\\n\".join(error_requests))\n    result_value = \"true\"\n    siemplify.LOGGER.info(\"----------------- Main - Finished -----------------\")\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == \"__main__\":\n    main()",
  "IntegrationIdentifier": "Check Point Sandblast",
  "ScriptResultName": "ScriptResult",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "{}",
      "ShowResult": true
    }
  ],
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": true,
  "IsSystem": false,
  "Version": 16.0,
  "TimeoutSeconds": 300,
  "Parameters": [
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "UEsDBBQAAAAIAExY+1DwJujLRgEAAH8CAAAbAAAAbm90aWZpY2F0aW9uLmlkODYwNDQ5Ny5qbmxwhZJNTsMwEIXXROIOI29R4haF0iIn3YAoEjtO4DqTxpVjW7bblNuTpOk/CK8s+Zv33syYzXe1gi06L43OyDgZEUAtTCH1KiObUMZTMs8hYmutLHiLooceCLQMLrnHjFQhWP9CqTZBllLwII1OZDF9mqWjcZoUptHK8IJA5bDMyB9YZ0DyCACY1KVxdQ+01tAfFmRQmL8uPuFtZx16D1/otlIgo/unI7lFXRjXox86oNO9ElfwXi8XjA7PR7wyNVq+wiFe0zRJUalEmJrQE1WgF07aTum3EGC0khoTRs9BiO7aUnrTD/MoNk6G7/wgz5WKLbpa+m4Rnu4HQS841hqajRPoT7HWjx7P1zdpN3OWes3dP1PnjsDB7UafcWvVUBR3jUHNpY6F4t5fSpKhMXpdkUdRFFz3WaaTUZrOnuE+YrRbdt7efgBQSwECHwAUAAAACABMWPtQ8Cboy0YBAAB/AgAAGwAkAAAAAAAAACAgAAAAAAAAbm90aWZpY2F0aW9uLmlkODYwNDQ5Ny5qbmxwCgAgAAAAAAABABgAAeGV/mlk1gFWvmEy8WTWAVa+YTLxZNYBUEsFBgAAAAABAAEAbQAAAH8BAAAAAA==",
      "Description": "Comma separated base64 blobs of files to upload",
      "Name": "Base64 File Blob",
      "Value": "UEsDBBQAAAAIAExY+1DwJujLRgEAAH8CAAAbAAAAbm90aWZpY2F0aW9uLmlkODYwNDQ5Ny5qbmxwhZJNTsMwEIXXROIOI29R4haF0iIn3YAoEjtO4DqTxpVjW7bblNuTpOk/CK8s+Zv33syYzXe1gi06L43OyDgZEUAtTCH1KiObUMZTMs8hYmutLHiLooceCLQMLrnHjFQhWP9CqTZBllLwII1OZDF9mqWjcZoUptHK8IJA5bDMyB9YZ0DyCACY1KVxdQ+01tAfFmRQmL8uPuFtZx16D1/otlIgo/unI7lFXRjXox86oNO9ElfwXi8XjA7PR7wyNVq+wiFe0zRJUalEmJrQE1WgF07aTum3EGC0khoTRs9BiO7aUnrTD/MoNk6G7/wgz5WKLbpa+m4Rnu4HQS841hqajRPoT7HWjx7P1zdpN3OWes3dP1PnjsDB7UafcWvVUBR3jUHNpY6F4t5fSpKhMXpdkUdRFFz3WaaTUZrOnuE+YrRbdt7efgBQSwECHwAUAAAACABMWPtQ8Cboy0YBAAB/AgAAGwAkAAAAAAAAACAgAAAAAAAAbm90aWZpY2F0aW9uLmlkODYwNDQ5Ny5qbmxwCgAgAAAAAAABABgAAeGV/mlk1gFWvmEy8WTWAVa+YTLxZNYBUEsFBgAAAAABAAEAbQAAAH8BAAAAAA==",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1598789009127,
      "ModificationTimeUnixTimeInMs": 1598789009127
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "5",
      "Description": "How many files to upload at maximum",
      "Name": "Max Uploads",
      "Value": "5",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1598789009127,
      "ModificationTimeUnixTimeInMs": 1598789009127
    }
  ],
  "DefaultResultValue": "",
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1598789009122,
  "ModificationTimeUnixTimeInMs": 1598789009124
}