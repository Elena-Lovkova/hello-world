{
  "Name": "Ping",
  "Description": "",
  "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED,EXECUTION_STATE_TIMEDOUT\nfrom SiemplifyDataModel import EntityTypes\nfrom cp_tr_manager import CheckPoint_TR_Manager\n# Example Consts:\nINTEGRATION_NAME = \"Check Point Threat Reputation\"\n\nSCRIPT_NAME = \"get_file_reputation\"\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    siemplify.LOGGER.info(\"[ INFO ] ================= Main - Param Init =================\")\n\n    # INIT INTEGRATION CONFIGURATION:\n    client_key = siemplify.extract_configuration_param(provider_name=INTEGRATION_NAME,\n                                                    param_name=\"Client Key\")\n    api_root = siemplify.extract_configuration_param(provider_name=INTEGRATION_NAME,\n                                                    param_name=\"API Root\")\n                                                    \n    cp_manager = CheckPoint_TR_Manager(client_key=client_key, api_root=api_root)\n    \n    siemplify.LOGGER.info(\"[ INFO ] ----------------- Main - Started -----------------\")\n    try:\n        status = EXECUTION_STATE_COMPLETED  # used to flag back to siemplify system, the action final status\n        output_message = \"output message :\"  # human readable message, showed in UI as the action result\n        result_value = None  # Set a simple result value, used for playbook if\\else and placeholders.\n        \n        result_value = cp_manager.ping()\n\n    except Exception as e:\n        siemplify.LOGGER.error(\"[ ERROR ] General error performing action {}\".format(SCRIPT_NAME))\n        siemplify.LOGGER.exception(e)\n        raise  # used to return entire error details - including stacktrace back to client UI. Best for most usecases\n        # in case you want to handle the error yourself, don't raise, and handle error result ouputs:\n        status = EXECUTION_STATE_FAILED\n        result_value = \"Failed\"\n        output_message += \"\\n unknown failure\"\n\n\n    siemplify.LOGGER.info(\"[ INFO ] ----------------- Main - Finished -----------------\")\n    siemplify.LOGGER.info(\"[ INFO ] \\n  status: {}\\n  result_value: {}\\n  output_message: {}\".format(status,result_value, output_message))\n    siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "IntegrationIdentifier": "Check Point Threat Reputation",
  "ScriptResultName": "ScriptResult",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "{}",
      "ShowResult": true
    }
  ],
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": true,
  "IsSystem": false,
  "Version": 12.0,
  "TimeoutSeconds": 300,
  "Parameters": [],
  "DefaultResultValue": "",
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1598524898490,
  "ModificationTimeUnixTimeInMs": 1598524898492
}